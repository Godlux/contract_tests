{
  "contractName": "Jkp",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_result",
          "type": "uint8"
        }
      ],
      "name": "EndGame",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "check_creator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_other_player_address",
          "type": "address"
        }
      ],
      "name": "reset_game",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_other_player_address",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        }
      ],
      "name": "commit_choise",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_other_player_address",
          "type": "address"
        },
        {
          "internalType": "enum Jkp.Choice",
          "name": "choice",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "reval_choise",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_other_player_address",
          "type": "address"
        }
      ],
      "name": "get_result",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "result",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_result\",\"type\":\"uint8\"}],\"name\":\"EndGame\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"check_creator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_other_player_address\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"commit_choise\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_other_player_address\",\"type\":\"address\"}],\"name\":\"get_result\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_other_player_address\",\"type\":\"address\"}],\"name\":\"reset_game\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_other_player_address\",\"type\":\"address\"},{\"internalType\":\"enum Jkp.Choice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"reval_choise\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Jkp.sol\":\"Jkp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Jkp.sol\":{\"keccak256\":\"0xf968cc55168ae88a76606b5d8ee5d08358192fd620705656457ce70d60f6f2d5\",\"urls\":[\"bzz-raw://f6d2f009549e5afd8525dd527a4a9430f23119baf81e4c7186191b21da392396\",\"dweb:/ipfs/QmQUxt6GpULDba6meLefdRBiaPx7ZY5hJouJa9Vt6YcuuQ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260016000600160038111156200006f576200006e62000625565b5b600381111562000084576200008362000625565b5b8152602001908152602001600020600060016003811115620000ab57620000aa62000625565b5b6003811115620000c057620000bf62000625565b5b815260200190815260200160002060006101000a81548160ff02191690836002811115620000f357620000f262000625565b5b021790555060018060006001600381111562000114576200011362000625565b5b600381111562000129576200012862000625565b5b815260200190815260200160002060006002600381111562000150576200014f62000625565b5b600381111562000165576200016462000625565b5b815260200190815260200160002060006101000a81548160ff0219169083600281111562000198576200019762000625565b5b021790555060006001600060016003811115620001ba57620001b962000625565b5b6003811115620001cf57620001ce62000625565b5b81526020019081526020016000206000600380811115620001f557620001f462000625565b5b60038111156200020a576200020962000625565b5b815260200190815260200160002060006101000a81548160ff021916908360028111156200023d576200023c62000625565b5b0217905550600060016000600260038111156200025f576200025e62000625565b5b600381111562000274576200027362000625565b5b81526020019081526020016000206000600160038111156200029b576200029a62000625565b5b6003811115620002b057620002af62000625565b5b815260200190815260200160002060006101000a81548160ff02191690836002811115620002e357620002e262000625565b5b02179055506002600160006002600381111562000305576200030462000625565b5b60038111156200031a576200031962000625565b5b815260200190815260200160002060006002600381111562000341576200034062000625565b5b600381111562000356576200035562000625565b5b815260200190815260200160002060006101000a81548160ff0219169083600281111562000389576200038862000625565b5b0217905550600180600060026003811115620003aa57620003a962000625565b5b6003811115620003bf57620003be62000625565b5b81526020019081526020016000206000600380811115620003e557620003e462000625565b5b6003811115620003fa57620003f962000625565b5b815260200190815260200160002060006101000a81548160ff021916908360028111156200042d576200042c62000625565b5b021790555060018060006003808111156200044d576200044c62000625565b5b600381111562000462576200046162000625565b5b815260200190815260200160002060006001600381111562000489576200048862000625565b5b60038111156200049e576200049d62000625565b5b815260200190815260200160002060006101000a81548160ff02191690836002811115620004d157620004d062000625565b5b0217905550600060016000600380811115620004f257620004f162000625565b5b600381111562000507576200050662000625565b5b81526020019081526020016000206000600260038111156200052e576200052d62000625565b5b600381111562000543576200054262000625565b5b815260200190815260200160002060006101000a81548160ff0219169083600281111562000576576200057562000625565b5b021790555060026001600060038081111562000597576200059662000625565b5b6003811115620005ac57620005ab62000625565b5b81526020019081526020016000206000600380811115620005d257620005d162000625565b5b6003811115620005e757620005e662000625565b5b815260200190815260200160002060006101000a81548160ff021916908360028111156200061a576200061962000625565b5b021790555062000654565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61189680620006646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806321e8b78514610067578063288df10914610097578063379fd01b146100c7578063f2fde38b146100f7578063f652be5614610113578063f9cf826414610143575b600080fd5b610081600480360381019061007c9190611198565b610161565b60405161008e91906111e1565b60405180910390f35b6100b160048036038101906100ac9190611232565b6105fb565b6040516100be919061128d565b60405180910390f35b6100e160048036038101906100dc91906112cd565b610749565b6040516100ee919061128d565b60405180910390f35b610111600480360381019061010c9190611198565b610b54565b005b61012d60048036038101906101289190611198565b610bef565b60405161013a919061128d565b60405180910390f35b61014b6110d3565b604051610158919061128d565b60405180910390f35b600080600381111561017657610175611320565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600381111561021257610211611320565b5b1415610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a906113d2565b60405180910390fd5b6000600381111561026757610266611320565b5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600381111561030357610302611320565b5b1415610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90611464565b60405180910390fd5b600060016000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660038111156103e6576103e5611320565b5b60038111156103f8576103f7611320565b5b81526020019081526020016000206000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660038111156104a4576104a3611320565b5b60038111156104b6576104b5611320565b5b815260200190815260200160002060009054906101000a900460ff1690506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fca877aac494c1a237a54e53d1cf34403a485633cd56280f38c182df72936526f8360028111156105cb576105ca611320565b5b6040516105d891906111e1565b60405180910390a38060028111156105f3576105f2611320565b5b915050919050565b60008060001b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b5906114d0565b60405180910390fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60008060001b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561080d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108049061153c565b60405180910390fd5b6000801b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c6906115ce565b60405180910390fd5b600060038111156108e3576108e2611320565b5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600381111561097f5761097e611320565b5b146109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b69061163a565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548383604051602001610a4f9291906116ea565b6040516020818303038152906040528051906020012014610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c90611788565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836003811115610b4457610b43611320565b5b0217905550600190509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bac57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610d0e5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4490611840565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000801b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000801b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600381111561101f5761101e611320565b5b02179055506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360038111156110c4576110c3611320565b5b02179055506001915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112e57600080fd5b6001905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111658261113a565b9050919050565b6111758161115a565b811461118057600080fd5b50565b6000813590506111928161116c565b92915050565b6000602082840312156111ae576111ad611135565b5b60006111bc84828501611183565b91505092915050565b600060ff82169050919050565b6111db816111c5565b82525050565b60006020820190506111f660008301846111d2565b92915050565b6000819050919050565b61120f816111fc565b811461121a57600080fd5b50565b60008135905061122c81611206565b92915050565b6000806040838503121561124957611248611135565b5b600061125785828601611183565b92505060206112688582860161121d565b9150509250929050565b60008115159050919050565b61128781611272565b82525050565b60006020820190506112a2600083018461127e565b92915050565b600481106112b557600080fd5b50565b6000813590506112c7816112a8565b92915050565b6000806000606084860312156112e6576112e5611135565b5b60006112f486828701611183565b9350506020611305868287016112b8565b92505060406113168682870161121d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f596f75206861766520746f20726576616c20796f75722063686f69736520666960008201527f7273742100000000000000000000000000000000000000000000000000000000602082015250565b60006113bc60248361134f565b91506113c782611360565b604082019050919050565b600060208201905081810360008301526113eb816113af565b9050919050565b7f596f7572206f70706f6e656e74206861766520746f20726576616c206869732060008201527f63686f6973652066697273742100000000000000000000000000000000000000602082015250565b600061144e602d8361134f565b9150611459826113f2565b604082019050919050565b6000602082019050818103600083015261147d81611441565b9050919050565b7f43686f69736520697320616c726561647920636f6d6d69746564210000000000600082015250565b60006114ba601b8361134f565b91506114c582611484565b602082019050919050565b600060208201905081810360008301526114e9816114ad565b9050919050565b7f596f75722063686f6973652073686f756c6420626520636f6d6d697465642100600082015250565b6000611526601f8361134f565b9150611531826114f0565b602082019050919050565b6000602082019050818103600083015261155581611519565b9050919050565b7f596f7572206f70706f6e656e7427732063686f6973652073686f756c6420626560008201527f20636f6d6d697465642100000000000000000000000000000000000000000000602082015250565b60006115b8602a8361134f565b91506115c38261155c565b604082019050919050565b600060208201905081810360008301526115e7816115ab565b9050919050565b7f416c726561647920726576616c65642100000000000000000000000000000000600082015250565b600061162460108361134f565b915061162f826115ee565b602082019050919050565b6000602082019050818103600083015261165381611617565b9050919050565b6004811061166b5761166a611320565b5b50565b600081905061167c8261165a565b919050565b600061168c8261166e565b9050919050565b60008160f81b9050919050565b60006116ab82611693565b9050919050565b6116c36116be82611681565b6116a0565b82525050565b6000819050919050565b6116e46116df826111fc565b6116c9565b82525050565b60006116f682856116b2565b60018201915061170682846116d3565b6020820191508190509392505050565b7f43616e2774206163636570742063686f6973653a20696e76616c69642068617360008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b600061177260218361134f565b915061177d82611716565b604082019050919050565b600060208201905081810360008301526117a181611765565b9050919050565b7f4f6e65206f6620746865206f70706f6e656e747320686176656e27742066696e60008201527f6973682063757272656e742067616d652028636865636b20726573756c74292e60208201527f2046696e6973682063757272656e742067616d65206669727374210000000000604082015250565b600061182a605b8361134f565b9150611835826117a8565b606082019050919050565b600060208201905081810360008301526118598161181d565b905091905056fea264697066735822122020c4e1920f97bd34f3dc313a65233fe5b5152c43eb30284acb3b0852709ba22864736f6c634300080a0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:2"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13757:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:2",
                "type": ""
              }
            ],
            "src": "7:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:2",
                "type": ""
              }
            ],
            "src": "334:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:2",
                "type": ""
              }
            ],
            "src": "466:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:2"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:2",
                "type": ""
              }
            ],
            "src": "568:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:2"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:2",
                "type": ""
              }
            ],
            "src": "696:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:2",
                "type": ""
              }
            ],
            "src": "841:329:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1219:43:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1244:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1251:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:16:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1229:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1201:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1211:7:2",
                "type": ""
              }
            ],
            "src": "1176:86:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:51:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1346:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1367:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1351:15:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:22:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1339:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:35:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1339:35:2"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1317:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1324:3:2",
                "type": ""
              }
            ],
            "src": "1268:112:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1480:120:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1490:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1502:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1513:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1498:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1490:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1566:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1575:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1526:39:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:67:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1526:67:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1452:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1464:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1475:4:2",
                "type": ""
              }
            ],
            "src": "1386:214:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1651:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1661:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1672:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1661:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1633:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1643:7:2",
                "type": ""
              }
            ],
            "src": "1606:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1732:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1789:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1798:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1801:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1791:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1791:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1791:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1755:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1780:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "1762:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1762:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1752:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1742:63:2"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1725:5:2",
                "type": ""
              }
            ],
            "src": "1689:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1869:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1879:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1901:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1888:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1888:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1879:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1944:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "1917:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1917:33:2"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1847:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1855:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1863:5:2",
                "type": ""
              }
            ],
            "src": "1817:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2045:391:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2091:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2093:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2093:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2093:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2066:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2075:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2062:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2087:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2058:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2055:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2184:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2199:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2213:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2203:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2228:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2263:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2274:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2259:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2259:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2283:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2238:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2238:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2228:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2311:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2326:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2340:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2330:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2356:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2391:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2402:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2387:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2387:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2411:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2366:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2356:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2007:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2018:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2030:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2038:6:2",
                "type": ""
              }
            ],
            "src": "1962:474:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2484:48:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2494:32:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2519:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2512:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2512:13:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2505:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2505:21:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2494:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2466:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2476:7:2",
                "type": ""
              }
            ],
            "src": "2442:90:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2597:50:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2614:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2634:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2619:14:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:21:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:34:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2607:34:2"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2585:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2592:3:2",
                "type": ""
              }
            ],
            "src": "2538:109:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2745:118:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2755:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2767:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2778:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2763:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2763:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2755:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2829:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2842:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2853:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2838:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2838:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2791:37:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:65:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2791:65:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2717:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2729:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2740:4:2",
                "type": ""
              }
            ],
            "src": "2653:210:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2921:56:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2955:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2964:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2967:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2957:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2957:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2957:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2944:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2951:1:2",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2941:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2941:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2934:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2931:40:2"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Choice_$43",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2914:5:2",
                "type": ""
              }
            ],
            "src": "2869:108:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3044:96:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3054:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3076:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3063:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3063:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3054:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3128:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Choice_$43",
                      "nodeType": "YulIdentifier",
                      "src": "3092:35:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3092:42:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3092:42:2"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Choice_$43",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3022:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3030:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3038:5:2",
                "type": ""
              }
            ],
            "src": "2983:157:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3255:528:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3301:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3303:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3303:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3303:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3276:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3285:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3272:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3272:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3297:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3268:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3268:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3265:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3394:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3409:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3423:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3413:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3438:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3473:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3484:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3469:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3469:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3493:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3448:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3448:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3438:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3521:127:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3536:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3550:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3540:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3566:72:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3610:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3621:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3606:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3606:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3630:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Choice_$43",
                          "nodeType": "YulIdentifier",
                          "src": "3576:29:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3576:62:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3566:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3658:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3673:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3687:2:2",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3677:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3703:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3738:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3749:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3734:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3734:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3758:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3713:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3713:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3703:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_Choice_$43t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3209:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3220:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3232:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3240:6:2",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3248:6:2",
                "type": ""
              }
            ],
            "src": "3146:637:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3817:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3834:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3837:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3827:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3827:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3827:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3931:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3934:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3924:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3924:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3955:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3948:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3948:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3948:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3789:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4071:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4088:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4093:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4081:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4081:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4081:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4109:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4128:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4133:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4124:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4124:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4109:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4043:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4048:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4059:11:2",
                "type": ""
              }
            ],
            "src": "3975:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4256:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4278:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4286:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4274:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4274:14:2"
                      },
                      {
                        "hexValue": "596f75206861766520746f20726576616c20796f75722063686f697365206669",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4290:34:2",
                        "type": "",
                        "value": "You have to reval your choise fi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4267:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4267:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4267:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4346:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4354:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4342:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4342:15:2"
                      },
                      {
                        "hexValue": "72737421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4359:6:2",
                        "type": "",
                        "value": "rst!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4335:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:31:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4335:31:2"
                }
              ]
            },
            "name": "store_literal_in_memory_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4248:6:2",
                "type": ""
              }
            ],
            "src": "4150:223:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4525:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4535:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4601:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4606:2:2",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4542:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4542:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4535:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4707:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
                      "nodeType": "YulIdentifier",
                      "src": "4618:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4618:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4720:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4731:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4727:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4727:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4720:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4513:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4521:3:2",
                "type": ""
              }
            ],
            "src": "4379:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4922:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4932:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4944:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4955:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4940:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4940:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4932:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4979:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4990:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4975:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4975:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4998:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5004:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4968:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4968:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5024:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5158:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5032:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5032:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5024:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4902:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4917:4:2",
                "type": ""
              }
            ],
            "src": "4751:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5282:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5304:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5312:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5300:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5300:14:2"
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e74206861766520746f20726576616c2068697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5316:34:2",
                        "type": "",
                        "value": "Your opponent have to reval his "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5293:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5293:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5372:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5380:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5368:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5368:15:2"
                      },
                      {
                        "hexValue": "63686f69736520666972737421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5385:15:2",
                        "type": "",
                        "value": "choise first!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5361:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5361:40:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5361:40:2"
                }
              ]
            },
            "name": "store_literal_in_memory_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5274:6:2",
                "type": ""
              }
            ],
            "src": "5176:232:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5560:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5570:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5636:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5641:2:2",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5577:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5577:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5570:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5742:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
                      "nodeType": "YulIdentifier",
                      "src": "5653:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5653:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5653:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5755:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5766:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5771:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5762:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5755:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5548:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5556:3:2",
                "type": ""
              }
            ],
            "src": "5414:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5957:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5967:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5979:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5990:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5975:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5975:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5967:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6014:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6025:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6010:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6010:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6033:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6039:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6003:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6003:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6003:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6059:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6193:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6067:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6059:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5937:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5952:4:2",
                "type": ""
              }
            ],
            "src": "5786:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6317:71:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6339:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6347:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6335:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6335:14:2"
                      },
                      {
                        "hexValue": "43686f69736520697320616c726561647920636f6d6d6974656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6351:29:2",
                        "type": "",
                        "value": "Choise is already commited!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6328:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:53:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6328:53:2"
                }
              ]
            },
            "name": "store_literal_in_memory_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6309:6:2",
                "type": ""
              }
            ],
            "src": "6211:177:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6540:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6550:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6616:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6621:2:2",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6557:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6550:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6722:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
                      "nodeType": "YulIdentifier",
                      "src": "6633:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6633:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6735:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6746:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6751:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6742:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6735:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6528:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6536:3:2",
                "type": ""
              }
            ],
            "src": "6394:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6937:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6947:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6959:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6970:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6955:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6955:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6947:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6994:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7005:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6990:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6990:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7013:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7019:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7009:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7009:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6983:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6983:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6983:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7039:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7173:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7047:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7039:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6917:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6932:4:2",
                "type": ""
              }
            ],
            "src": "6766:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7297:75:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7327:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7315:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7315:14:2"
                      },
                      {
                        "hexValue": "596f75722063686f6973652073686f756c6420626520636f6d6d6974656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7331:33:2",
                        "type": "",
                        "value": "Your choise should be commited!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7308:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7308:57:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7308:57:2"
                }
              ]
            },
            "name": "store_literal_in_memory_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7289:6:2",
                "type": ""
              }
            ],
            "src": "7191:181:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7524:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7534:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7600:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7605:2:2",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7541:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7541:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7534:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7706:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
                      "nodeType": "YulIdentifier",
                      "src": "7617:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7617:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7617:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7719:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7730:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7735:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7726:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7726:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7719:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7512:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7520:3:2",
                "type": ""
              }
            ],
            "src": "7378:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7921:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7931:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7943:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7954:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7939:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7939:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7931:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7978:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7989:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7974:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7974:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7997:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8003:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7993:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7993:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7967:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7967:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7967:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8023:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8157:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8031:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8031:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8023:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7901:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7916:4:2",
                "type": ""
              }
            ],
            "src": "7750:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8281:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8303:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8311:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8299:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8299:14:2"
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e7427732063686f6973652073686f756c64206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8315:34:2",
                        "type": "",
                        "value": "Your opponent's choise should be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8292:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8292:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8292:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8371:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8379:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8367:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8367:15:2"
                      },
                      {
                        "hexValue": "20636f6d6d6974656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8384:12:2",
                        "type": "",
                        "value": " commited!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8360:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8360:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8360:37:2"
                }
              ]
            },
            "name": "store_literal_in_memory_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8273:6:2",
                "type": ""
              }
            ],
            "src": "8175:229:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8556:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8566:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8632:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8637:2:2",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8573:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8573:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8566:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8738:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
                      "nodeType": "YulIdentifier",
                      "src": "8649:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8649:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8649:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8751:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8762:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8767:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8758:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8758:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8751:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8544:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8552:3:2",
                "type": ""
              }
            ],
            "src": "8410:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8953:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8963:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8975:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8986:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8971:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8971:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8963:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9010:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9021:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9006:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9006:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9029:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9035:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9025:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9025:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8999:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8999:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8999:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9055:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9189:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9063:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9063:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9055:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8933:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8948:4:2",
                "type": ""
              }
            ],
            "src": "8782:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9313:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9335:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9343:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9331:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9331:14:2"
                      },
                      {
                        "hexValue": "416c726561647920726576616c656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9347:18:2",
                        "type": "",
                        "value": "Already revaled!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9324:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9324:42:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9324:42:2"
                }
              ]
            },
            "name": "store_literal_in_memory_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9305:6:2",
                "type": ""
              }
            ],
            "src": "9207:166:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9525:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9535:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9601:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9606:2:2",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9542:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9542:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9535:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9707:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
                      "nodeType": "YulIdentifier",
                      "src": "9618:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9618:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9618:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9720:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9731:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9736:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9727:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9727:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9720:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9513:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9521:3:2",
                "type": ""
              }
            ],
            "src": "9379:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9922:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9932:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9944:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9955:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9940:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9932:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9979:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9990:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9975:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9975:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9998:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10004:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9994:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9994:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9968:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9968:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9968:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10158:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10032:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10032:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10024:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9902:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9917:4:2",
                "type": ""
              }
            ],
            "src": "9751:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10228:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10262:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "10264:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10264:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10264:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10251:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10258:1:2",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10248:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10248:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10241:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10241:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "10238:46:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Choice_$43",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10221:5:2",
                "type": ""
              }
            ],
            "src": "10176:114:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10350:75:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10360:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10371:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10360:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10413:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Choice_$43",
                      "nodeType": "YulIdentifier",
                      "src": "10377:35:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10377:42:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10377:42:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_Choice_$43",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10332:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10342:7:2",
                "type": ""
              }
            ],
            "src": "10296:129:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10498:62:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10508:46:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10548:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Choice_$43",
                      "nodeType": "YulIdentifier",
                      "src": "10521:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10521:33:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10508:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Choice_$43_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10478:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10488:9:2",
                "type": ""
              }
            ],
            "src": "10431:129:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10609:53:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10619:36:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10644:3:2",
                        "type": "",
                        "value": "248"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10649:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "10640:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10640:15:2"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "10619:8:2"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_248",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10590:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "10600:8:2",
                "type": ""
              }
            ],
            "src": "10566:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10713:48:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10723:32:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10749:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_248",
                      "nodeType": "YulIdentifier",
                      "src": "10734:14:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10734:21:2"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "10723:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10695:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "10705:7:2",
                "type": ""
              }
            ],
            "src": "10668:93:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10857:92:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10874:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10935:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_enum$_Choice_$43_to_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "10897:37:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10897:44:2"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "10879:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10879:63:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10867:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10867:76:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10867:76:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Choice_$43_to_t_uint8_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10845:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10852:3:2",
                "type": ""
              }
            ],
            "src": "10767:182:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11002:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11012:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11023:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "11012:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10984:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "10994:7:2",
                "type": ""
              }
            ],
            "src": "10955:79:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11123:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11140:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11183:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "11165:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11165:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "11145:19:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11145:45:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11133:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11133:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11133:58:2"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11111:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11118:3:2",
                "type": ""
              }
            ],
            "src": "11040:157:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11354:259:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11434:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11443:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Choice_$43_to_t_uint8_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11365:68:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11365:82:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11365:82:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11456:18:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11467:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11472:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11463:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11463:11:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11456:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11546:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11555:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11484:61:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11484:75:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11484:75:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11568:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11579:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11584:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11575:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11575:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11568:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11597:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11604:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11597:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_enum$_Choice_$43_t_bytes32__to_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11325:3:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11331:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11339:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11350:3:2",
                "type": ""
              }
            ],
            "src": "11203:410:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11725:114:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11747:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11755:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11743:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11743:14:2"
                      },
                      {
                        "hexValue": "43616e2774206163636570742063686f6973653a20696e76616c696420686173",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11759:34:2",
                        "type": "",
                        "value": "Can't accept choise: invalid has"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11736:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11736:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11736:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11815:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11823:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11811:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11811:15:2"
                      },
                      {
                        "hexValue": "68",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11828:3:2",
                        "type": "",
                        "value": "h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11804:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11804:28:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11804:28:2"
                }
              ]
            },
            "name": "store_literal_in_memory_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11717:6:2",
                "type": ""
              }
            ],
            "src": "11619:220:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11991:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12001:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12067:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12072:2:2",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12008:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12008:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12001:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12173:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
                      "nodeType": "YulIdentifier",
                      "src": "12084:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12084:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12084:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12186:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12197:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12202:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12193:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12193:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12186:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11979:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11987:3:2",
                "type": ""
              }
            ],
            "src": "11845:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12388:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12398:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12410:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12421:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12406:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12406:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12398:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12445:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12456:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12441:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12441:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12464:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12470:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12460:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12460:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12434:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12434:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12434:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12490:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12624:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12498:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12498:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12490:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12368:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12383:4:2",
                "type": ""
              }
            ],
            "src": "12217:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12748:209:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12770:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12778:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12766:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12766:14:2"
                      },
                      {
                        "hexValue": "4f6e65206f6620746865206f70706f6e656e747320686176656e27742066696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12782:34:2",
                        "type": "",
                        "value": "One of the opponents haven't fin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12759:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12759:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12759:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12838:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12846:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12834:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12834:15:2"
                      },
                      {
                        "hexValue": "6973682063757272656e742067616d652028636865636b20726573756c74292e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12851:34:2",
                        "type": "",
                        "value": "ish current game (check result)."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12827:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12827:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12827:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12907:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12915:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12903:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:15:2"
                      },
                      {
                        "hexValue": "2046696e6973682063757272656e742067616d6520666972737421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12920:29:2",
                        "type": "",
                        "value": " Finish current game first!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12896:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12896:54:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12896:54:2"
                }
              ]
            },
            "name": "store_literal_in_memory_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12740:6:2",
                "type": ""
              }
            ],
            "src": "12642:315:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13109:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13119:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13185:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13190:2:2",
                        "type": "",
                        "value": "91"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13126:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13126:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13119:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13291:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
                      "nodeType": "YulIdentifier",
                      "src": "13202:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13202:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13202:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13304:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13315:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13320:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13311:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13311:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13304:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13097:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13105:3:2",
                "type": ""
              }
            ],
            "src": "12963:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13506:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13516:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13528:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13539:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13524:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13524:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13516:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13563:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13574:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13559:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13559:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13582:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13588:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13578:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13578:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13552:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13552:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13552:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13608:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13742:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13616:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13616:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13608:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13486:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13501:4:2",
                "type": ""
              }
            ],
            "src": "13335:419:2"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_Choice_$43(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Choice_$43(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Choice_$43(value)\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Choice_$43t_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Choice_$43(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have to reval your choise fi\")\n\n        mstore(add(memPtr, 32), \"rst!\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your opponent have to reval his \")\n\n        mstore(add(memPtr, 32), \"choise first!\")\n\n    }\n\n    function abi_encode_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Choise is already commited!\")\n\n    }\n\n    function abi_encode_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your choise should be commited!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your opponent's choise should be\")\n\n        mstore(add(memPtr, 32), \" commited!\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already revaled!\")\n\n    }\n\n    function abi_encode_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_assert_t_enum$_Choice_$43(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Choice_$43(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Choice_$43(value)\n    }\n\n    function convert_t_enum$_Choice_$43_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Choice_$43(value)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_enum$_Choice_$43_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Choice_$43_to_t_uint8(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_enum$_Choice_$43_t_bytes32__to_t_uint8_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_enum$_Choice_$43_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't accept choise: invalid has\")\n\n        mstore(add(memPtr, 32), \"h\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169(memPtr) {\n\n        mstore(add(memPtr, 0), \"One of the opponents haven't fin\")\n\n        mstore(add(memPtr, 32), \"ish current game (check result).\")\n\n        mstore(add(memPtr, 64), \" Finish current game first!\")\n\n    }\n\n    function abi_encode_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 91)\n        store_literal_in_memory_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "314:4243:0:-:0;;;707:651;;;;;;;;;;101:10;93:5;;:18;;;;;;;;;;;;;;;;;;774:14;731;:27;746:11;731:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:40;759:11;731:40;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;842:14;798;:27;813:11;798:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;826:12;798:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;913:13;866:14;:27;881:11;866:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;894:15;866:44;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;980:13;936:14;:28;951:12;936:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;965:11;936:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1048:14;1003;:28;1018:12;1003:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:42;1032:12;1003:42;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1120:14;1072;:28;1087:12;1072:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;1101:15;1072:45;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1191:14;1144;:31;1159:15;1144:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;1176:11;1144:44;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1263:13;1215:14;:31;1230:15;1215:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;1247:12;1215:45;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1337:14;1286;:31;1301:15;1286:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:48;1318:15;1286:48;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;314:4243;;7:180:2;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;314:4243:0;;;;;;;",
  "deployedSourceMap": "314:4243:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3828:644;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2766:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:736;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;212:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2211:545;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2103:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3828:644;3895:12;3973:11;3927:57;;;;;;;;:::i;:::-;;:7;:19;3935:10;3927:19;;;;;;;;;;;;;;;:42;3947:21;3927:42;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;;3919:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;4089:11;4043:57;;;;;;;;:::i;:::-;;:7;:30;4051:21;4043:30;;;;;;;;;;;;;;;:42;4074:10;4043:42;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;;4035:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;4160:21;4184:14;:58;4199:7;:19;4207:10;4199:19;;;;;;;;;;;;;;;:42;4219:21;4199:42;;;;;;;;;;;;;;;;;;;;;;;;;4184:58;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:102;4243:7;:30;4251:21;4243:30;;;;;;;;;;;;;;;:42;4274:10;4243:42;;;;;;;;;;;;;;;;;;;;;;;;;4184:102;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4160:126;;4349:4;4296:15;:27;4312:10;4296:27;;;;;;;;;;;;;;;:50;4324:21;4296:50;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;4388:21;4368:62;;4376:10;4368:62;;;4417:11;4411:18;;;;;;;;:::i;:::-;;4368:62;;;;;;:::i;:::-;;;;;;;;4453:11;4447:18;;;;;;;;:::i;:::-;;4440:25;;;3828:644;;;:::o;2766:306::-;2856:12;2940:1;2888:53;;:13;:25;2902:10;2888:25;;;;;;;;;;;;;;;:48;2914:21;2888:48;;;;;;;;;;;;;;;;:53;2880:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3034:10;2983:13;:25;2997:10;2983:25;;;;;;;;;;;;;;;:48;3009:21;2983:48;;;;;;;;;;;;;;;:61;;;;3061:4;3054:11;;2766:306;;;;:::o;3082:736::-;3181:12;3265:1;3213:53;;:13;:25;3227:10;3213:25;;;;;;;;;;;;;;;:48;3239:21;3213:48;;;;;;;;;;;;;;;;:53;;3205:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;3372:1;3320:53;;:13;:36;3334:21;3320:36;;;;;;;;;;;;;;;:48;3357:10;3320:48;;;;;;;;;;;;;;;;:53;;3312:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;3484:11;3438:57;;;;;;;;:::i;:::-;;:7;:19;3446:10;3438:19;;;;;;;;;;;;;;;:42;3458:21;3438:42;;;;;;;;;;;;;;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;3430:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3643:13;:25;3657:10;3643:25;;;;;;;;;;;;;;;:48;3669:21;3643:48;;;;;;;;;;;;;;;;3624:6;3632:5;3607:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3597:42;;;;;;:94;3589:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;3784:6;3739:7;:19;3747:10;3739:19;;;;;;;;;;;;;;;:42;3759:21;3739:42;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3807:4;3800:11;;3082:736;;;;;:::o;212:92::-;178:5;;;;;;;;;;164:19;;:10;:19;;;156:28;;;;;;289:8:::1;281:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;212:92:::0;:::o;2211:545::-;2322:12;2290:21;1875:15;:27;1891:10;1875:27;;;;;;;;;;;;;;;:50;1903:21;1875:50;;;;;;;;;;;;;;;;;;;;;;;;;:104;;;;;1929:15;:38;1945:21;1929:38;;;;;;;;;;;;;;;:50;1968:10;1929:50;;;;;;;;;;;;;;;;;;;;;;;;;1875:104;1867:208;;;;;;;;;;;;:::i;:::-;;;;;;;;;2399:5:::1;2346:15;:27;2362:10;2346:27;;;;;;;;;;;;;;;:50;2374:21;2346:50;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2467:5;2414:15;:38;2430:21;2414:38;;;;;;;;;;;;;;;:50;2453:10;2414:50;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2533:1;2482:52:::0;::::1;:13;:25;2496:10;2482:25;;;;;;;;;;;;;;;:48;2508:21;2482:48;;;;;;;;;;;;;;;:52;;;;2595:1;2544:52:::0;::::1;:13;:36;2558:21;2544:36;;;;;;;;;;;;;;;:48;2581:10;2544:48;;;;;;;;;;;;;;;:52;;;;2651:11;2606:7;:19;2614:10;2606:19;;;;;;;;;;;;;;;:42;2626:21;2606:42;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2717:11;2672:7;:30;2680:21;2672:30;;;;;;;;;;;;;;;:42;2703:10;2672:42;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2745:4;2738:11;;2211:545:::0;;;;:::o;2103:98::-;2159:12;178:5;;;;;;;;;;;164:19;;:10;:19;;;156:28;;;;;;2190:4:::1;2183:11;;2103:98:::0;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:86::-;1211:7;1251:4;1244:5;1240:16;1229:27;;1176:86;;;:::o;1268:112::-;1351:22;1367:5;1351:22;:::i;:::-;1346:3;1339:35;1268:112;;:::o;1386:214::-;1475:4;1513:2;1502:9;1498:18;1490:26;;1526:67;1590:1;1579:9;1575:17;1566:6;1526:67;:::i;:::-;1386:214;;;;:::o;1606:77::-;1643:7;1672:5;1661:16;;1606:77;;;:::o;1689:122::-;1762:24;1780:5;1762:24;:::i;:::-;1755:5;1752:35;1742:63;;1801:1;1798;1791:12;1742:63;1689:122;:::o;1817:139::-;1863:5;1901:6;1888:20;1879:29;;1917:33;1944:5;1917:33;:::i;:::-;1817:139;;;;:::o;1962:474::-;2030:6;2038;2087:2;2075:9;2066:7;2062:23;2058:32;2055:119;;;2093:79;;:::i;:::-;2055:119;2213:1;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2184:117;2340:2;2366:53;2411:7;2402:6;2391:9;2387:22;2366:53;:::i;:::-;2356:63;;2311:118;1962:474;;;;;:::o;2442:90::-;2476:7;2519:5;2512:13;2505:21;2494:32;;2442:90;;;:::o;2538:109::-;2619:21;2634:5;2619:21;:::i;:::-;2614:3;2607:34;2538:109;;:::o;2653:210::-;2740:4;2778:2;2767:9;2763:18;2755:26;;2791:65;2853:1;2842:9;2838:17;2829:6;2791:65;:::i;:::-;2653:210;;;;:::o;2869:108::-;2951:1;2944:5;2941:12;2931:40;;2967:1;2964;2957:12;2931:40;2869:108;:::o;2983:157::-;3038:5;3076:6;3063:20;3054:29;;3092:42;3128:5;3092:42;:::i;:::-;2983:157;;;;:::o;3146:637::-;3232:6;3240;3248;3297:2;3285:9;3276:7;3272:23;3268:32;3265:119;;;3303:79;;:::i;:::-;3265:119;3423:1;3448:53;3493:7;3484:6;3473:9;3469:22;3448:53;:::i;:::-;3438:63;;3394:117;3550:2;3576:62;3630:7;3621:6;3610:9;3606:22;3576:62;:::i;:::-;3566:72;;3521:127;3687:2;3713:53;3758:7;3749:6;3738:9;3734:22;3713:53;:::i;:::-;3703:63;;3658:118;3146:637;;;;;:::o;3789:180::-;3837:77;3834:1;3827:88;3934:4;3931:1;3924:15;3958:4;3955:1;3948:15;3975:169;4059:11;4093:6;4088:3;4081:19;4133:4;4128:3;4124:14;4109:29;;3975:169;;;;:::o;4150:223::-;4290:34;4286:1;4278:6;4274:14;4267:58;4359:6;4354:2;4346:6;4342:15;4335:31;4150:223;:::o;4379:366::-;4521:3;4542:67;4606:2;4601:3;4542:67;:::i;:::-;4535:74;;4618:93;4707:3;4618:93;:::i;:::-;4736:2;4731:3;4727:12;4720:19;;4379:366;;;:::o;4751:419::-;4917:4;4955:2;4944:9;4940:18;4932:26;;5004:9;4998:4;4994:20;4990:1;4979:9;4975:17;4968:47;5032:131;5158:4;5032:131;:::i;:::-;5024:139;;4751:419;;;:::o;5176:232::-;5316:34;5312:1;5304:6;5300:14;5293:58;5385:15;5380:2;5372:6;5368:15;5361:40;5176:232;:::o;5414:366::-;5556:3;5577:67;5641:2;5636:3;5577:67;:::i;:::-;5570:74;;5653:93;5742:3;5653:93;:::i;:::-;5771:2;5766:3;5762:12;5755:19;;5414:366;;;:::o;5786:419::-;5952:4;5990:2;5979:9;5975:18;5967:26;;6039:9;6033:4;6029:20;6025:1;6014:9;6010:17;6003:47;6067:131;6193:4;6067:131;:::i;:::-;6059:139;;5786:419;;;:::o;6211:177::-;6351:29;6347:1;6339:6;6335:14;6328:53;6211:177;:::o;6394:366::-;6536:3;6557:67;6621:2;6616:3;6557:67;:::i;:::-;6550:74;;6633:93;6722:3;6633:93;:::i;:::-;6751:2;6746:3;6742:12;6735:19;;6394:366;;;:::o;6766:419::-;6932:4;6970:2;6959:9;6955:18;6947:26;;7019:9;7013:4;7009:20;7005:1;6994:9;6990:17;6983:47;7047:131;7173:4;7047:131;:::i;:::-;7039:139;;6766:419;;;:::o;7191:181::-;7331:33;7327:1;7319:6;7315:14;7308:57;7191:181;:::o;7378:366::-;7520:3;7541:67;7605:2;7600:3;7541:67;:::i;:::-;7534:74;;7617:93;7706:3;7617:93;:::i;:::-;7735:2;7730:3;7726:12;7719:19;;7378:366;;;:::o;7750:419::-;7916:4;7954:2;7943:9;7939:18;7931:26;;8003:9;7997:4;7993:20;7989:1;7978:9;7974:17;7967:47;8031:131;8157:4;8031:131;:::i;:::-;8023:139;;7750:419;;;:::o;8175:229::-;8315:34;8311:1;8303:6;8299:14;8292:58;8384:12;8379:2;8371:6;8367:15;8360:37;8175:229;:::o;8410:366::-;8552:3;8573:67;8637:2;8632:3;8573:67;:::i;:::-;8566:74;;8649:93;8738:3;8649:93;:::i;:::-;8767:2;8762:3;8758:12;8751:19;;8410:366;;;:::o;8782:419::-;8948:4;8986:2;8975:9;8971:18;8963:26;;9035:9;9029:4;9025:20;9021:1;9010:9;9006:17;8999:47;9063:131;9189:4;9063:131;:::i;:::-;9055:139;;8782:419;;;:::o;9207:166::-;9347:18;9343:1;9335:6;9331:14;9324:42;9207:166;:::o;9379:366::-;9521:3;9542:67;9606:2;9601:3;9542:67;:::i;:::-;9535:74;;9618:93;9707:3;9618:93;:::i;:::-;9736:2;9731:3;9727:12;9720:19;;9379:366;;;:::o;9751:419::-;9917:4;9955:2;9944:9;9940:18;9932:26;;10004:9;9998:4;9994:20;9990:1;9979:9;9975:17;9968:47;10032:131;10158:4;10032:131;:::i;:::-;10024:139;;9751:419;;;:::o;10176:114::-;10258:1;10251:5;10248:12;10238:46;;10264:18;;:::i;:::-;10238:46;10176:114;:::o;10296:129::-;10342:7;10371:5;10360:16;;10377:42;10413:5;10377:42;:::i;:::-;10296:129;;;:::o;10431:::-;10488:9;10521:33;10548:5;10521:33;:::i;:::-;10508:46;;10431:129;;;:::o;10566:96::-;10600:8;10649:5;10644:3;10640:15;10619:36;;10566:96;;;:::o;10668:93::-;10705:7;10734:21;10749:5;10734:21;:::i;:::-;10723:32;;10668:93;;;:::o;10767:182::-;10879:63;10897:44;10935:5;10897:44;:::i;:::-;10879:63;:::i;:::-;10874:3;10867:76;10767:182;;:::o;10955:79::-;10994:7;11023:5;11012:16;;10955:79;;;:::o;11040:157::-;11145:45;11165:24;11183:5;11165:24;:::i;:::-;11145:45;:::i;:::-;11140:3;11133:58;11040:157;;:::o;11203:410::-;11350:3;11365:82;11443:3;11434:6;11365:82;:::i;:::-;11472:1;11467:3;11463:11;11456:18;;11484:75;11555:3;11546:6;11484:75;:::i;:::-;11584:2;11579:3;11575:12;11568:19;;11604:3;11597:10;;11203:410;;;;;:::o;11619:220::-;11759:34;11755:1;11747:6;11743:14;11736:58;11828:3;11823:2;11815:6;11811:15;11804:28;11619:220;:::o;11845:366::-;11987:3;12008:67;12072:2;12067:3;12008:67;:::i;:::-;12001:74;;12084:93;12173:3;12084:93;:::i;:::-;12202:2;12197:3;12193:12;12186:19;;11845:366;;;:::o;12217:419::-;12383:4;12421:2;12410:9;12406:18;12398:26;;12470:9;12464:4;12460:20;12456:1;12445:9;12441:17;12434:47;12498:131;12624:4;12498:131;:::i;:::-;12490:139;;12217:419;;;:::o;12642:315::-;12782:34;12778:1;12770:6;12766:14;12759:58;12851:34;12846:2;12838:6;12834:15;12827:59;12920:29;12915:2;12907:6;12903:15;12896:54;12642:315;:::o;12963:366::-;13105:3;13126:67;13190:2;13185:3;13126:67;:::i;:::-;13119:74;;13202:93;13291:3;13202:93;:::i;:::-;13320:2;13315:3;13311:12;13304:19;;12963:366;;;:::o;13335:419::-;13501:4;13539:2;13528:9;13524:18;13516:26;;13588:9;13582:4;13578:20;13574:1;13563:9;13559:17;13552:47;13616:131;13742:4;13616:131;:::i;:::-;13608:139;;13335:419;;;:::o",
  "source": "pragma solidity ^0.8.7;\n\ncontract Ownable {\n\n    address owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n \n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n\t    owner = newOwner;\n    }\n    \n\n}\n\ncontract Jkp is Ownable {\n    // Choices enum\n    enum Choice {\n        None,\n        Rock,\n        Paper,\n        Scissors\n    }\n    \n    // EndGame variations enum\n    enum GameState {\n        Win,\n        Lose,\n        Draw\n    }\n    \n    // A matrix containing result of the game depedning on its states\n    mapping(Choice => mapping(Choice => GameState)) private endgame_states;\n    \n    constructor() {\n        endgame_states[Choice.Rock][Choice.Rock] = GameState.Draw;\n        endgame_states[Choice.Rock][Choice.Paper] = GameState.Lose;\n        endgame_states[Choice.Rock][Choice.Scissors] = GameState.Win;\n        endgame_states[Choice.Paper][Choice.Rock] = GameState.Win;\n        endgame_states[Choice.Paper][Choice.Paper] = GameState.Draw;\n        endgame_states[Choice.Paper][Choice.Scissors] = GameState.Lose;\n        endgame_states[Choice.Scissors][Choice.Rock] = GameState.Lose;\n        endgame_states[Choice.Scissors][Choice.Paper] = GameState.Win;\n        endgame_states[Choice.Scissors][Choice.Scissors] = GameState.Draw;\n    }\n    \n    // contains commitments [_player][_other_player]\n    mapping (address => mapping (address => bytes32)) choise_hashes;\n    // contains states of choises choise[_player][_other_player]\n    mapping (address => mapping (address => Choice)) choises;\n    // contains \"ready to reset game\" flag for _player][_other_player] (both must accept game reset)\n    mapping (address => mapping (address => bool)) ready_for_reset;\n    \n    \n    modifier onlyIfBothResetReady(address _other_player_address) {\n        require(ready_for_reset[msg.sender][_other_player_address] && ready_for_reset[_other_player_address][msg.sender], \"One of the opponents haven't finish current game (check result). Finish current game first!\");\n        _;\n    }\n    \n    function check_creator() public view onlyOwner returns (bool success) {\n        return true;\n    }\n    \n    function reset_game(address _other_player_address) public onlyIfBothResetReady(_other_player_address) returns (bool success) {\n        ready_for_reset[msg.sender][_other_player_address] = false;\n        ready_for_reset[_other_player_address][msg.sender] = false;\n        choise_hashes[msg.sender][_other_player_address] = 0;\n        choise_hashes[_other_player_address][msg.sender] = 0;\n        choises[msg.sender][_other_player_address] = Choice.None;\n        choises[_other_player_address][msg.sender] = Choice.None;\n        return true;\n    }\n    \n    function commit_choise(address _other_player_address, bytes32 commitment) public returns (bool success) {\n        require(choise_hashes[msg.sender][_other_player_address] == 0, \"Choise is already commited!\");\n        choise_hashes[msg.sender][_other_player_address] = commitment;\n        return true;\n    }\n    \n    function reval_choise(address _other_player_address, Choice choice, bytes32 nonce) public returns (bool success) {\n        require(choise_hashes[msg.sender][_other_player_address] != 0, \"Your choise should be commited!\");\n        require(choise_hashes[_other_player_address][msg.sender] != 0, \"Your opponent's choise should be commited!\");\n        require(choises[msg.sender][_other_player_address] == Choice.None, \"Already revaled!\");\n         // Check the hash to ensure the commitment is correct\n        require(keccak256(abi.encodePacked(choice, nonce)) == choise_hashes[msg.sender][_other_player_address], \"Can't accept choise: invalid hash\");\n        choises[msg.sender][_other_player_address] = choice;\n        return true;\n    }\n    \n    function get_result(address _other_player_address) public returns (uint8 result) {\n        require(choises[msg.sender][_other_player_address] != Choice.None, \"You have to reval your choise first!\");\n        require(choises[_other_player_address][msg.sender] != Choice.None, \"Your opponent have to reval his choise first!\");\n        GameState game_result = endgame_states[choises[msg.sender][_other_player_address]][choises[_other_player_address][msg.sender]];\n        ready_for_reset[msg.sender][_other_player_address] = true;\n        emit EndGame(msg.sender, _other_player_address, uint8(game_result));\n        return uint8(game_result);\n    }\n    \n    event EndGame(address indexed _from, address indexed _to, uint8 _result);\n}\n",
  "sourcePath": "/home/godlux/Documents/EthLab/Funding/contracts/Jkp.sol",
  "ast": {
    "absolutePath": "project:/contracts/Jkp.sol",
    "exportedSymbols": {
      "Jkp": [
        478
      ],
      "Ownable": [
        36
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "Ownable",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "57:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "49:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "49:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "83:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "93:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "101:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "101:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "93:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "93:18:0"
                }
              ]
            },
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "80:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "83:0:0"
            },
            "scope": 36,
            "src": "69:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "146:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "164:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "164:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "178:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "164:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "156:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "156:28:0"
                },
                {
                  "id": 21,
                  "nodeType": "PlaceholderStatement",
                  "src": "194:1:0"
                }
              ]
            },
            "id": 23,
            "name": "onlyOwner",
            "nameLocation": "134:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:0"
            },
            "src": "125:77:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "274:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "281:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "289:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "281:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "281:16:0"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "264:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "264:9:0"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "221:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "247:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "239:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "238:18:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:0"
            },
            "scope": 36,
            "src": "212:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 479,
        "src": "25:287:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36,
              "src": "330:7:0"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "330:7:0"
          }
        ],
        "canonicalName": "Jkp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          36
        ],
        "name": "Jkp",
        "nameLocation": "323:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Jkp.Choice",
            "id": 43,
            "members": [
              {
                "id": 39,
                "name": "None",
                "nameLocation": "386:4:0",
                "nodeType": "EnumValue",
                "src": "386:4:0"
              },
              {
                "id": 40,
                "name": "Rock",
                "nameLocation": "400:4:0",
                "nodeType": "EnumValue",
                "src": "400:4:0"
              },
              {
                "id": 41,
                "name": "Paper",
                "nameLocation": "414:5:0",
                "nodeType": "EnumValue",
                "src": "414:5:0"
              },
              {
                "id": 42,
                "name": "Scissors",
                "nameLocation": "429:8:0",
                "nodeType": "EnumValue",
                "src": "429:8:0"
              }
            ],
            "name": "Choice",
            "nameLocation": "369:6:0",
            "nodeType": "EnumDefinition",
            "src": "364:79:0"
          },
          {
            "canonicalName": "Jkp.GameState",
            "id": 47,
            "members": [
              {
                "id": 44,
                "name": "Win",
                "nameLocation": "509:3:0",
                "nodeType": "EnumValue",
                "src": "509:3:0"
              },
              {
                "id": 45,
                "name": "Lose",
                "nameLocation": "522:4:0",
                "nodeType": "EnumValue",
                "src": "522:4:0"
              },
              {
                "id": 46,
                "name": "Draw",
                "nameLocation": "536:4:0",
                "nodeType": "EnumValue",
                "src": "536:4:0"
              }
            ],
            "name": "GameState",
            "nameLocation": "489:9:0",
            "nodeType": "EnumDefinition",
            "src": "484:62:0"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "endgame_states",
            "nameLocation": "682:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "626:70:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
              "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 49,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 48,
                  "name": "Choice",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "634:6:0"
                },
                "referencedDeclaration": 43,
                "src": "634:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Choice_$43",
                  "typeString": "enum Jkp.Choice"
                }
              },
              "nodeType": "Mapping",
              "src": "626:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
              },
              "valueType": {
                "id": 54,
                "keyType": {
                  "id": 51,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 50,
                    "name": "Choice",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43,
                    "src": "652:6:0"
                  },
                  "referencedDeclaration": 43,
                  "src": "652:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  }
                },
                "nodeType": "Mapping",
                "src": "644:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                  "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                },
                "valueType": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "GameState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47,
                    "src": "662:9:0"
                  },
                  "referencedDeclaration": 47,
                  "src": "662:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$47",
                    "typeString": "enum Jkp.GameState"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "721:637:0",
              "statements": [
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 59,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "731:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "expression": {
                            "id": 60,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "746:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "746:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "expression": {
                          "id": 62,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "759:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "759:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "731:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 66,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "774:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "731:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "731:57:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 70,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "798:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 75,
                        "indexExpression": {
                          "expression": {
                            "id": 71,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "813:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "798:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "expression": {
                          "id": 73,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "826:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "826:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "798:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 77,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "842:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "842:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "798:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "798:58:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 81,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "866:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 86,
                        "indexExpression": {
                          "expression": {
                            "id": 82,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "881:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "881:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "866:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "expression": {
                          "id": 84,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "894:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "894:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "866:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 88,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "913:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "913:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "866:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "866:60:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 92,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "936:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "expression": {
                            "id": 93,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "951:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "951:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "936:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "expression": {
                          "id": 95,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "965:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "965:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "936:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 99,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "980:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "980:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "936:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "936:57:0"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 103,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1003:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 108,
                        "indexExpression": {
                          "expression": {
                            "id": 104,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1018:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1018:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1003:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 106,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1032:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "1032:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1003:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1048:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1048:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1003:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:59:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 114,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1072:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 119,
                        "indexExpression": {
                          "expression": {
                            "id": 115,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1087:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1087:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1072:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "expression": {
                          "id": 117,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1101:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1101:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1072:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 121,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1120:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1120:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1072:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:62:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 125,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1144:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "expression": {
                            "id": 126,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1159:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1159:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "expression": {
                          "id": 128,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1176:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "1176:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1144:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 132,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1191:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1191:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1144:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:61:0"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 136,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1215:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "expression": {
                            "id": 137,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1230:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1230:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1215:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "expression": {
                          "id": 139,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1247:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "1247:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1215:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 143,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1263:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1263:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1215:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:61:0"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 147,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1286:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "expression": {
                            "id": 148,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1301:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1301:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1286:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "expression": {
                          "id": 150,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1318:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1318:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1286:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 154,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1337:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1337:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1286:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:65:0"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:0"
            },
            "scope": 478,
            "src": "707:651:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 165,
            "mutability": "mutable",
            "name": "choise_hashes",
            "nameLocation": "1471:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1421:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
              "typeString": "mapping(address => mapping(address => bytes32))"
            },
            "typeName": {
              "id": 164,
              "keyType": {
                "id": 160,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1430:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1421:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                "typeString": "mapping(address => mapping(address => bytes32))"
              },
              "valueType": {
                "id": 163,
                "keyType": {
                  "id": 161,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1441:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                  "typeString": "mapping(address => bytes32)"
                },
                "valueType": {
                  "id": 162,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1461:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 172,
            "mutability": "mutable",
            "name": "choises",
            "nameLocation": "1604:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1555:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
              "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
            },
            "typeName": {
              "id": 171,
              "keyType": {
                "id": 166,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1564:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1555:48:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
              },
              "valueType": {
                "id": 170,
                "keyType": {
                  "id": 167,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1584:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1575:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                  "typeString": "mapping(address => enum Jkp.Choice)"
                },
                "valueType": {
                  "id": 169,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 168,
                    "name": "Choice",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43,
                    "src": "1595:6:0"
                  },
                  "referencedDeclaration": 43,
                  "src": "1595:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 178,
            "mutability": "mutable",
            "name": "ready_for_reset",
            "nameLocation": "1765:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1718:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 177,
              "keyType": {
                "id": 173,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1727:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1718:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 176,
                "keyType": {
                  "id": 174,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1738:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 175,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1758:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1857:236:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 183,
                              "name": "ready_for_reset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1875:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 186,
                            "indexExpression": {
                              "expression": {
                                "id": 184,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1891:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1875:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "id": 187,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1903:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1875:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 189,
                              "name": "ready_for_reset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1929:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 191,
                            "indexExpression": {
                              "id": 190,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "1945:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1929:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "expression": {
                              "id": 192,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1968:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1968:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1929:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1875:104:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e65206f6620746865206f70706f6e656e747320686176656e27742066696e6973682063757272656e742067616d652028636865636b20726573756c74292e2046696e6973682063757272656e742067616d6520666972737421",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1981:93:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
                          "typeString": "literal_string \"One of the opponents haven't finish current game (check result). Finish current game first!\""
                        },
                        "value": "One of the opponents haven't finish current game (check result). Finish current game first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
                          "typeString": "literal_string \"One of the opponents haven't finish current game (check result). Finish current game first!\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:208:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:208:0"
                },
                {
                  "id": 199,
                  "nodeType": "PlaceholderStatement",
                  "src": "2085:1:0"
                }
              ]
            },
            "id": 201,
            "name": "onlyIfBothResetReady",
            "nameLocation": "1805:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "1834:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1826:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:31:0"
            },
            "src": "1796:297:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2173:28:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "2183:11:0"
                }
              ]
            },
            "functionSelector": "f9cf8264",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 203,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "2140:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:9:0"
              }
            ],
            "name": "check_creator",
            "nameLocation": "2112:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2125:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2164:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2159:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2158:14:0"
            },
            "scope": 478,
            "src": "2103:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "2336:420:0",
              "statements": [
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 221,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "2346:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 225,
                        "indexExpression": {
                          "expression": {
                            "id": 222,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2362:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2362:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "id": 224,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2374:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2346:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2399:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2346:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:58:0"
                },
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 230,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "2414:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 234,
                        "indexExpression": {
                          "id": 231,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2430:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2414:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "expression": {
                          "id": 232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2453:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2453:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2414:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2467:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2414:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:58:0"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 239,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2482:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "expression": {
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2496:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2496:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2482:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "id": 242,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2508:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2482:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2533:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2482:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:52:0"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 248,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2544:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 252,
                        "indexExpression": {
                          "id": 249,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2558:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2544:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "expression": {
                          "id": 250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2581:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2581:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2544:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2595:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2544:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2544:52:0"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 257,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "2606:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "expression": {
                            "id": 258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2614:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2614:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2606:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 260,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2626:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2606:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                          "typeString": "type(enum Jkp.Choice)"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "None",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "2651:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "2606:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:56:0"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 267,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "2672:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "id": 268,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2680:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2672:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2703:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2703:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2672:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2717:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                          "typeString": "type(enum Jkp.Choice)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "None",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "2717:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "2672:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:56:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 220,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "2738:11:0"
                }
              ]
            },
            "functionSelector": "f652be56",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 216,
                    "name": "_other_player_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "2290:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyIfBothResetReady",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 201,
                  "src": "2269:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2269:43:0"
              }
            ],
            "name": "reset_game",
            "nameLocation": "2220:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "2239:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2231:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2231:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2230:31:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2327:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2322:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:14:0"
            },
            "scope": 478,
            "src": "2211:545:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2870:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 290,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "2888:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 293,
                            "indexExpression": {
                              "expression": {
                                "id": 291,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2902:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2902:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2888:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "id": 294,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "2914:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2888:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2940:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2888:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43686f69736520697320616c726561647920636f6d6d6974656421",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2943:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
                          "typeString": "literal_string \"Choise is already commited!\""
                        },
                        "value": "Choise is already commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
                          "typeString": "literal_string \"Choise is already commited!\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2880:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:93:0"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 301,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2983:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 305,
                        "indexExpression": {
                          "expression": {
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2997:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2997:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2983:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 306,
                      "indexExpression": {
                        "id": 304,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "3009:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2983:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 307,
                      "name": "commitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3034:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2983:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:61:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3061:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 288,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "3054:11:0"
                }
              ]
            },
            "functionSelector": "288df109",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit_choise",
            "nameLocation": "2775:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "2797:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2789:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "commitment",
                  "nameLocation": "2828:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2820:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2788:51:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2861:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2856:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:14:0"
            },
            "scope": 478,
            "src": "2766:306:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "3195:623:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 326,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3213:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 329,
                            "indexExpression": {
                              "expression": {
                                "id": 327,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3227:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3227:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3213:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 331,
                          "indexExpression": {
                            "id": 330,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3239:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3213:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3265:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3213:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75722063686f6973652073686f756c6420626520636f6d6d6974656421",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
                          "typeString": "literal_string \"Your choise should be commited!\""
                        },
                        "value": "Your choise should be commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
                          "typeString": "literal_string \"Your choise should be commited!\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3205:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 338,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3320:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 340,
                            "indexExpression": {
                              "id": 339,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3334:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3320:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 343,
                          "indexExpression": {
                            "expression": {
                              "id": 341,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3357:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3357:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3320:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3320:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e7427732063686f6973652073686f756c6420626520636f6d6d6974656421",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3375:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
                          "typeString": "literal_string \"Your opponent's choise should be commited!\""
                        },
                        "value": "Your opponent's choise should be commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
                          "typeString": "literal_string \"Your opponent's choise should be commited!\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3312:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:108:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 350,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3438:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 353,
                            "indexExpression": {
                              "expression": {
                                "id": 351,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3446:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3446:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3438:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3458:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3438:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 356,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3484:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3484:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "3438:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726576616c656421",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3497:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
                          "typeString": "literal_string \"Already revaled!\""
                        },
                        "value": "Already revaled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
                          "typeString": "literal_string \"Already revaled!\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 366,
                                  "name": "choice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 318,
                                  "src": "3624:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Choice_$43",
                                    "typeString": "enum Jkp.Choice"
                                  }
                                },
                                {
                                  "id": 367,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "3632:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Choice_$43",
                                    "typeString": "enum Jkp.Choice"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 364,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "3607:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3607:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3607:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 363,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "3597:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3597:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 370,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3643:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "expression": {
                                "id": 371,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3657:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3657:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3643:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 375,
                          "indexExpression": {
                            "id": 374,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3669:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3643:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3597:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206163636570742063686f6973653a20696e76616c69642068617368",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3693:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
                          "typeString": "literal_string \"Can't accept choise: invalid hash\""
                        },
                        "value": "Can't accept choise: invalid hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
                          "typeString": "literal_string \"Can't accept choise: invalid hash\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3589:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:140:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:140:0"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 380,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "3739:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 384,
                        "indexExpression": {
                          "expression": {
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3747:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3747:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3739:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 385,
                      "indexExpression": {
                        "id": 383,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "3759:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3739:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 386,
                      "name": "choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "3784:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "3739:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:51:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 324,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "3800:11:0"
                }
              ]
            },
            "functionSelector": "379fd01b",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reval_choise",
            "nameLocation": "3091:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "3112:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3104:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "3142:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3135:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  },
                  "typeName": {
                    "id": 317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 316,
                      "name": "Choice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43,
                      "src": "3135:6:0"
                    },
                    "referencedDeclaration": 43,
                    "src": "3135:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3158:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3150:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3103:61:0"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3186:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3181:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:14:0"
            },
            "scope": 478,
            "src": "3082:736:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "3909:563:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 400,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3927:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 403,
                            "indexExpression": {
                              "expression": {
                                "id": 401,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3935:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3927:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "id": 404,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "3947:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3927:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 406,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3973:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3973:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "3927:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520746f20726576616c20796f75722063686f69736520666972737421",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3986:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
                          "typeString": "literal_string \"You have to reval your choise first!\""
                        },
                        "value": "You have to reval your choise first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
                          "typeString": "literal_string \"You have to reval your choise first!\""
                        }
                      ],
                      "id": 399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3919:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 413,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "4043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 415,
                            "indexExpression": {
                              "id": 414,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "4051:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4043:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 418,
                          "indexExpression": {
                            "expression": {
                              "id": 416,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4074:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4074:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4043:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 419,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "4089:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4089:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "4043:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e74206861766520746f20726576616c206869732063686f69736520666972737421",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4102:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
                          "typeString": "literal_string \"Your opponent have to reval his choise first!\""
                        },
                        "value": "Your opponent have to reval his choise first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
                          "typeString": "literal_string \"Your opponent have to reval his choise first!\""
                        }
                      ],
                      "id": 412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:115:0"
                },
                {
                  "assignments": [
                    427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 427,
                      "mutability": "mutable",
                      "name": "game_result",
                      "nameLocation": "4170:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4160:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      },
                      "typeName": {
                        "id": 426,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 425,
                          "name": "GameState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47,
                          "src": "4160:9:0"
                        },
                        "referencedDeclaration": 47,
                        "src": "4160:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 428,
                        "name": "endgame_states",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4184:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                          "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 429,
                            "name": "choises",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "4199:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                              "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                            }
                          },
                          "id": 432,
                          "indexExpression": {
                            "expression": {
                              "id": 430,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4207:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4207:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4199:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                            "typeString": "mapping(address => enum Jkp.Choice)"
                          }
                        },
                        "id": 434,
                        "indexExpression": {
                          "id": 433,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4219:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4199:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4184:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                        "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                      }
                    },
                    "id": 442,
                    "indexExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 436,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "4243:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 438,
                        "indexExpression": {
                          "id": 437,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4251:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4243:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "expression": {
                          "id": 439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4274:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4274:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4243:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4184:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4160:126:0"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 444,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "4296:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "expression": {
                            "id": 445,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4312:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4312:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4296:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "id": 447,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4324:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4296:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4296:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4296:57:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4376:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4376:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 456,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4388:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 459,
                            "name": "game_result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "4417:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GameState_$47",
                              "typeString": "enum Jkp.GameState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_GameState_$47",
                              "typeString": "enum Jkp.GameState"
                            }
                          ],
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4411:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 457,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "4411:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4411:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 453,
                      "name": "EndGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "4368:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "4363:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 465,
                        "name": "game_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4453:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      ],
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4447:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4447:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 467,
                  "nodeType": "Return",
                  "src": "4440:25:0"
                }
              ]
            },
            "functionSelector": "21e8b785",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_result",
            "nameLocation": "3837:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "3856:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3848:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3848:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3847:31:0"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "3901:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3895:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:14:0"
            },
            "scope": 478,
            "src": "3828:644:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 477,
            "name": "EndGame",
            "nameLocation": "4488:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4512:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4496:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4535:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4519:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_result",
                  "nameLocation": "4546:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4540:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:59:0"
            },
            "src": "4482:73:0"
          }
        ],
        "scope": 479,
        "src": "314:4243:0",
        "usedErrors": []
      }
    ],
    "src": "0:4558:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Jkp.sol",
    "exportedSymbols": {
      "Jkp": [
        478
      ],
      "Ownable": [
        36
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "Ownable",
        "nameLocation": "34:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "57:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "49:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "49:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "83:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "93:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "101:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "101:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "93:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "93:18:0"
                }
              ]
            },
            "id": 12,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "80:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "83:0:0"
            },
            "scope": 36,
            "src": "69:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "146:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "164:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "164:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "178:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "164:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "156:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "156:28:0"
                },
                {
                  "id": 21,
                  "nodeType": "PlaceholderStatement",
                  "src": "194:1:0"
                }
              ]
            },
            "id": 23,
            "name": "onlyOwner",
            "nameLocation": "134:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:0"
            },
            "src": "125:77:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "274:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "281:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "289:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "281:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "281:16:0"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "264:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "264:9:0"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "221:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "247:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "239:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "238:18:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:0"
            },
            "scope": 36,
            "src": "212:92:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 479,
        "src": "25:287:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36,
              "src": "330:7:0"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "330:7:0"
          }
        ],
        "canonicalName": "Jkp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          36
        ],
        "name": "Jkp",
        "nameLocation": "323:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Jkp.Choice",
            "id": 43,
            "members": [
              {
                "id": 39,
                "name": "None",
                "nameLocation": "386:4:0",
                "nodeType": "EnumValue",
                "src": "386:4:0"
              },
              {
                "id": 40,
                "name": "Rock",
                "nameLocation": "400:4:0",
                "nodeType": "EnumValue",
                "src": "400:4:0"
              },
              {
                "id": 41,
                "name": "Paper",
                "nameLocation": "414:5:0",
                "nodeType": "EnumValue",
                "src": "414:5:0"
              },
              {
                "id": 42,
                "name": "Scissors",
                "nameLocation": "429:8:0",
                "nodeType": "EnumValue",
                "src": "429:8:0"
              }
            ],
            "name": "Choice",
            "nameLocation": "369:6:0",
            "nodeType": "EnumDefinition",
            "src": "364:79:0"
          },
          {
            "canonicalName": "Jkp.GameState",
            "id": 47,
            "members": [
              {
                "id": 44,
                "name": "Win",
                "nameLocation": "509:3:0",
                "nodeType": "EnumValue",
                "src": "509:3:0"
              },
              {
                "id": 45,
                "name": "Lose",
                "nameLocation": "522:4:0",
                "nodeType": "EnumValue",
                "src": "522:4:0"
              },
              {
                "id": 46,
                "name": "Draw",
                "nameLocation": "536:4:0",
                "nodeType": "EnumValue",
                "src": "536:4:0"
              }
            ],
            "name": "GameState",
            "nameLocation": "489:9:0",
            "nodeType": "EnumDefinition",
            "src": "484:62:0"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "endgame_states",
            "nameLocation": "682:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "626:70:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
              "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 49,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 48,
                  "name": "Choice",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "634:6:0"
                },
                "referencedDeclaration": 43,
                "src": "634:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Choice_$43",
                  "typeString": "enum Jkp.Choice"
                }
              },
              "nodeType": "Mapping",
              "src": "626:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
              },
              "valueType": {
                "id": 54,
                "keyType": {
                  "id": 51,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 50,
                    "name": "Choice",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43,
                    "src": "652:6:0"
                  },
                  "referencedDeclaration": 43,
                  "src": "652:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  }
                },
                "nodeType": "Mapping",
                "src": "644:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                  "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                },
                "valueType": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "GameState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47,
                    "src": "662:9:0"
                  },
                  "referencedDeclaration": 47,
                  "src": "662:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$47",
                    "typeString": "enum Jkp.GameState"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "721:637:0",
              "statements": [
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 59,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "731:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "expression": {
                            "id": 60,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "746:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "746:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "expression": {
                          "id": 62,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "759:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "759:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "731:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 66,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "774:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "774:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "731:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "731:57:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 70,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "798:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 75,
                        "indexExpression": {
                          "expression": {
                            "id": 71,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "813:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "798:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "expression": {
                          "id": 73,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "826:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "826:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "798:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 77,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "842:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "842:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "798:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "798:58:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 81,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "866:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 86,
                        "indexExpression": {
                          "expression": {
                            "id": 82,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "881:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Rock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "881:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "866:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "expression": {
                          "id": 84,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "894:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "894:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "866:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 88,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "913:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "913:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "866:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "866:60:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 92,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "936:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "expression": {
                            "id": 93,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "951:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "951:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "936:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "expression": {
                          "id": 95,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "965:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "965:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "936:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 99,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "980:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "980:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "936:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "936:57:0"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 103,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1003:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 108,
                        "indexExpression": {
                          "expression": {
                            "id": 104,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1018:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1018:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1003:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 106,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1032:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "1032:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1003:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1048:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1048:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1003:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:59:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 114,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1072:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 119,
                        "indexExpression": {
                          "expression": {
                            "id": 115,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1087:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Paper",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1087:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1072:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "expression": {
                          "id": 117,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1101:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1101:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1072:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 121,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1120:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1120:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1072:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:62:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 125,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1144:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "expression": {
                            "id": 126,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1159:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1159:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1144:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "expression": {
                          "id": 128,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1176:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Rock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "1176:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1144:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 132,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1191:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Lose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1191:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1144:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:61:0"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 136,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1215:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "expression": {
                            "id": 137,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1230:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1230:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1215:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "expression": {
                          "id": 139,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1247:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Paper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "1247:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1215:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 143,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1263:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Win",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1263:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1215:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:61:0"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 147,
                          "name": "endgame_states",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1286:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                            "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "expression": {
                            "id": 148,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1301:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Scissors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1301:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1286:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                          "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "expression": {
                          "id": 150,
                          "name": "Choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1318:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                            "typeString": "type(enum Jkp.Choice)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Scissors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "1318:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1286:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 154,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1337:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$47_$",
                          "typeString": "type(enum Jkp.GameState)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Draw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1337:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      }
                    },
                    "src": "1286:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:65:0"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:0"
            },
            "scope": 478,
            "src": "707:651:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 165,
            "mutability": "mutable",
            "name": "choise_hashes",
            "nameLocation": "1471:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1421:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
              "typeString": "mapping(address => mapping(address => bytes32))"
            },
            "typeName": {
              "id": 164,
              "keyType": {
                "id": 160,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1430:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1421:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                "typeString": "mapping(address => mapping(address => bytes32))"
              },
              "valueType": {
                "id": 163,
                "keyType": {
                  "id": 161,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1441:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                  "typeString": "mapping(address => bytes32)"
                },
                "valueType": {
                  "id": 162,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1461:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 172,
            "mutability": "mutable",
            "name": "choises",
            "nameLocation": "1604:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1555:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
              "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
            },
            "typeName": {
              "id": 171,
              "keyType": {
                "id": 166,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1564:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1555:48:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
              },
              "valueType": {
                "id": 170,
                "keyType": {
                  "id": 167,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1584:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1575:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                  "typeString": "mapping(address => enum Jkp.Choice)"
                },
                "valueType": {
                  "id": 169,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 168,
                    "name": "Choice",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43,
                    "src": "1595:6:0"
                  },
                  "referencedDeclaration": 43,
                  "src": "1595:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 178,
            "mutability": "mutable",
            "name": "ready_for_reset",
            "nameLocation": "1765:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 478,
            "src": "1718:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 177,
              "keyType": {
                "id": 173,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1727:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1718:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 176,
                "keyType": {
                  "id": 174,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1738:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 175,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1758:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1857:236:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 183,
                              "name": "ready_for_reset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1875:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 186,
                            "indexExpression": {
                              "expression": {
                                "id": 184,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1891:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1875:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "id": 187,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1903:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1875:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 189,
                              "name": "ready_for_reset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1929:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 191,
                            "indexExpression": {
                              "id": 190,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "1945:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1929:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "expression": {
                              "id": 192,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1968:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1968:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1929:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1875:104:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e65206f6620746865206f70706f6e656e747320686176656e27742066696e6973682063757272656e742067616d652028636865636b20726573756c74292e2046696e6973682063757272656e742067616d6520666972737421",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1981:93:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
                          "typeString": "literal_string \"One of the opponents haven't finish current game (check result). Finish current game first!\""
                        },
                        "value": "One of the opponents haven't finish current game (check result). Finish current game first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58ea298c11e41370c3da13bb80bbc74ae7ed2a2d78f08d3d10dd4c2c2bc84169",
                          "typeString": "literal_string \"One of the opponents haven't finish current game (check result). Finish current game first!\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:208:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:208:0"
                },
                {
                  "id": 199,
                  "nodeType": "PlaceholderStatement",
                  "src": "2085:1:0"
                }
              ]
            },
            "id": 201,
            "name": "onlyIfBothResetReady",
            "nameLocation": "1805:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "1834:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1826:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:31:0"
            },
            "src": "1796:297:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2173:28:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2190:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "2183:11:0"
                }
              ]
            },
            "functionSelector": "f9cf8264",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 203,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "2140:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:9:0"
              }
            ],
            "name": "check_creator",
            "nameLocation": "2112:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2125:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2164:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2159:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2158:14:0"
            },
            "scope": 478,
            "src": "2103:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "2336:420:0",
              "statements": [
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 221,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "2346:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 225,
                        "indexExpression": {
                          "expression": {
                            "id": 222,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2362:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2362:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "id": 224,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2374:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2346:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2399:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2346:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:58:0"
                },
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 230,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "2414:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 234,
                        "indexExpression": {
                          "id": 231,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2430:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2414:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "expression": {
                          "id": 232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2453:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2453:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2414:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2467:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2414:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:58:0"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 239,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2482:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "expression": {
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2496:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2496:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2482:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "id": 242,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2508:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2482:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2533:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2482:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:52:0"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 248,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2544:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 252,
                        "indexExpression": {
                          "id": 249,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2558:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2544:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "expression": {
                          "id": 250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2581:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2581:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2544:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2595:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2544:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2544:52:0"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 257,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "2606:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "expression": {
                            "id": 258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2614:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2614:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2606:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 260,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2626:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2606:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2651:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                          "typeString": "type(enum Jkp.Choice)"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "None",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "2651:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "2606:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:56:0"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 267,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "2672:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "id": 268,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2680:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2672:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "expression": {
                          "id": 269,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2703:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2703:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2672:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "Choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2717:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                          "typeString": "type(enum Jkp.Choice)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "None",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "2717:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "2672:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:56:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 220,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "2738:11:0"
                }
              ]
            },
            "functionSelector": "f652be56",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 216,
                    "name": "_other_player_address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "2290:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyIfBothResetReady",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 201,
                  "src": "2269:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2269:43:0"
              }
            ],
            "name": "reset_game",
            "nameLocation": "2220:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "2239:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2231:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2231:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2230:31:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2327:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2322:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:14:0"
            },
            "scope": 478,
            "src": "2211:545:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2870:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 290,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "2888:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 293,
                            "indexExpression": {
                              "expression": {
                                "id": 291,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2902:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2902:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2888:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "id": 294,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "2914:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2888:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2940:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2888:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43686f69736520697320616c726561647920636f6d6d6974656421",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2943:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
                          "typeString": "literal_string \"Choise is already commited!\""
                        },
                        "value": "Choise is already commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_366742572fd268285a2c27ace17034686e9b0fb6d2b93082abfdfb26dc4572de",
                          "typeString": "literal_string \"Choise is already commited!\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2880:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:93:0"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 301,
                          "name": "choise_hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2983:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                            "typeString": "mapping(address => mapping(address => bytes32))"
                          }
                        },
                        "id": 305,
                        "indexExpression": {
                          "expression": {
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2997:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2997:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2983:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 306,
                      "indexExpression": {
                        "id": 304,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "3009:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2983:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 307,
                      "name": "commitment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3034:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2983:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:61:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3061:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 288,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "3054:11:0"
                }
              ]
            },
            "functionSelector": "288df109",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commit_choise",
            "nameLocation": "2775:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "2797:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2789:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "commitment",
                  "nameLocation": "2828:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2820:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2788:51:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2861:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2856:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:14:0"
            },
            "scope": 478,
            "src": "2766:306:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "3195:623:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 326,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3213:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 329,
                            "indexExpression": {
                              "expression": {
                                "id": 327,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3227:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3227:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3213:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 331,
                          "indexExpression": {
                            "id": 330,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3239:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3213:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3265:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3213:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75722063686f6973652073686f756c6420626520636f6d6d6974656421",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
                          "typeString": "literal_string \"Your choise should be commited!\""
                        },
                        "value": "Your choise should be commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2889c736a89dd2ad464d3c84a66ee7aef3e24bf30a4c092015f5e953a3410a05",
                          "typeString": "literal_string \"Your choise should be commited!\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3205:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 338,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3320:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 340,
                            "indexExpression": {
                              "id": 339,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3334:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3320:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 343,
                          "indexExpression": {
                            "expression": {
                              "id": 341,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3357:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3357:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3320:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3372:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3320:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e7427732063686f6973652073686f756c6420626520636f6d6d6974656421",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3375:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
                          "typeString": "literal_string \"Your opponent's choise should be commited!\""
                        },
                        "value": "Your opponent's choise should be commited!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d9717795dfad3d337969d8540d788751a4c803e894f683ea1f5ac28f5b4876d",
                          "typeString": "literal_string \"Your opponent's choise should be commited!\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3312:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:108:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 350,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3438:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 353,
                            "indexExpression": {
                              "expression": {
                                "id": 351,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3446:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3446:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3438:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3458:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3438:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 356,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3484:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3484:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "3438:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726576616c656421",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3497:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
                          "typeString": "literal_string \"Already revaled!\""
                        },
                        "value": "Already revaled!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16336c1b38d06b96ffd9a0948a762c77328d1e4d29fb2ad5b29ed572a4486f9c",
                          "typeString": "literal_string \"Already revaled!\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 366,
                                  "name": "choice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 318,
                                  "src": "3624:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Choice_$43",
                                    "typeString": "enum Jkp.Choice"
                                  }
                                },
                                {
                                  "id": 367,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "3632:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Choice_$43",
                                    "typeString": "enum Jkp.Choice"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 364,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "3607:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3607:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3607:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 363,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "3597:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3597:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 370,
                              "name": "choise_hashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3643:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes32_$_$",
                                "typeString": "mapping(address => mapping(address => bytes32))"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "expression": {
                                "id": 371,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3657:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3657:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3643:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 375,
                          "indexExpression": {
                            "id": 374,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3669:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3643:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3597:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206163636570742063686f6973653a20696e76616c69642068617368",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3693:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
                          "typeString": "literal_string \"Can't accept choise: invalid hash\""
                        },
                        "value": "Can't accept choise: invalid hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c3da51f2bd56bb81688cf813368bc659e1297aad70d18f2602ebef1d632ef97",
                          "typeString": "literal_string \"Can't accept choise: invalid hash\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3589:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:140:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:140:0"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 380,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "3739:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 384,
                        "indexExpression": {
                          "expression": {
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3747:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3747:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3739:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 385,
                      "indexExpression": {
                        "id": 383,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "3759:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3739:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 386,
                      "name": "choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "3784:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "src": "3739:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:51:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 324,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "3800:11:0"
                }
              ]
            },
            "functionSelector": "379fd01b",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reval_choise",
            "nameLocation": "3091:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "3112:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3104:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "3142:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3135:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Choice_$43",
                    "typeString": "enum Jkp.Choice"
                  },
                  "typeName": {
                    "id": 317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 316,
                      "name": "Choice",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43,
                      "src": "3135:6:0"
                    },
                    "referencedDeclaration": 43,
                    "src": "3135:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Choice_$43",
                      "typeString": "enum Jkp.Choice"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3158:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3150:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3103:61:0"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3186:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "3181:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:14:0"
            },
            "scope": 478,
            "src": "3082:736:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "3909:563:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 400,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3927:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 403,
                            "indexExpression": {
                              "expression": {
                                "id": 401,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3935:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3927:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "id": 404,
                            "name": "_other_player_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "3947:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3927:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 406,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3973:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "3973:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "3927:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520746f20726576616c20796f75722063686f69736520666972737421",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3986:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
                          "typeString": "literal_string \"You have to reval your choise first!\""
                        },
                        "value": "You have to reval your choise first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e01ff4a84eaafed99f26677986d1ffbcf8ef2fe7d50966a92ae215635a81a68",
                          "typeString": "literal_string \"You have to reval your choise first!\""
                        }
                      ],
                      "id": 399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3919:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 413,
                              "name": "choises",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "4043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                                "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                              }
                            },
                            "id": 415,
                            "indexExpression": {
                              "id": 414,
                              "name": "_other_player_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "4051:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4043:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                              "typeString": "mapping(address => enum Jkp.Choice)"
                            }
                          },
                          "id": 418,
                          "indexExpression": {
                            "expression": {
                              "id": 416,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4074:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4074:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4043:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 419,
                            "name": "Choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "4089:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Choice_$43_$",
                              "typeString": "type(enum Jkp.Choice)"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "None",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4089:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Choice_$43",
                            "typeString": "enum Jkp.Choice"
                          }
                        },
                        "src": "4043:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7572206f70706f6e656e74206861766520746f20726576616c206869732063686f69736520666972737421",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4102:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
                          "typeString": "literal_string \"Your opponent have to reval his choise first!\""
                        },
                        "value": "Your opponent have to reval his choise first!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_754e222d3cd33197c54325067812fb867f77d71644588e52ff7b26afee76ba21",
                          "typeString": "literal_string \"Your opponent have to reval his choise first!\""
                        }
                      ],
                      "id": 412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:115:0"
                },
                {
                  "assignments": [
                    427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 427,
                      "mutability": "mutable",
                      "name": "game_result",
                      "nameLocation": "4170:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "4160:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$47",
                        "typeString": "enum Jkp.GameState"
                      },
                      "typeName": {
                        "id": 426,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 425,
                          "name": "GameState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47,
                          "src": "4160:9:0"
                        },
                        "referencedDeclaration": 47,
                        "src": "4160:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 428,
                        "name": "endgame_states",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4184:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$_$",
                          "typeString": "mapping(enum Jkp.Choice => mapping(enum Jkp.Choice => enum Jkp.GameState))"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 429,
                            "name": "choises",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "4199:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                              "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                            }
                          },
                          "id": 432,
                          "indexExpression": {
                            "expression": {
                              "id": 430,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4207:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4207:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4199:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                            "typeString": "mapping(address => enum Jkp.Choice)"
                          }
                        },
                        "id": 434,
                        "indexExpression": {
                          "id": 433,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4219:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4199:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Choice_$43",
                          "typeString": "enum Jkp.Choice"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4184:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Choice_$43_$_t_enum$_GameState_$47_$",
                        "typeString": "mapping(enum Jkp.Choice => enum Jkp.GameState)"
                      }
                    },
                    "id": 442,
                    "indexExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 436,
                          "name": "choises",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "4243:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_enum$_Choice_$43_$_$",
                            "typeString": "mapping(address => mapping(address => enum Jkp.Choice))"
                          }
                        },
                        "id": 438,
                        "indexExpression": {
                          "id": 437,
                          "name": "_other_player_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "4251:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4243:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_Choice_$43_$",
                          "typeString": "mapping(address => enum Jkp.Choice)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "expression": {
                          "id": 439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4274:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4274:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4243:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Choice_$43",
                        "typeString": "enum Jkp.Choice"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4184:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$47",
                      "typeString": "enum Jkp.GameState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4160:126:0"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 444,
                          "name": "ready_for_reset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "4296:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "expression": {
                            "id": 445,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4312:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4312:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4296:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "id": 447,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4324:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4296:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4296:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4296:57:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4376:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4376:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 456,
                        "name": "_other_player_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "4388:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 459,
                            "name": "game_result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "4417:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GameState_$47",
                              "typeString": "enum Jkp.GameState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_GameState_$47",
                              "typeString": "enum Jkp.GameState"
                            }
                          ],
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4411:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 457,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "4411:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4411:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 453,
                      "name": "EndGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "4368:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,uint8)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "4363:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 465,
                        "name": "game_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4453:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_GameState_$47",
                          "typeString": "enum Jkp.GameState"
                        }
                      ],
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4447:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4447:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 467,
                  "nodeType": "Return",
                  "src": "4440:25:0"
                }
              ]
            },
            "functionSelector": "21e8b785",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_result",
            "nameLocation": "3837:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_other_player_address",
                  "nameLocation": "3856:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3848:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3848:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3847:31:0"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "3901:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3895:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:14:0"
            },
            "scope": 478,
            "src": "3828:644:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 477,
            "name": "EndGame",
            "nameLocation": "4488:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4512:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4496:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4535:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4519:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_result",
                  "nameLocation": "4546:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4540:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:59:0"
            },
            "src": "4482:73:0"
          }
        ],
        "scope": 479,
        "src": "314:4243:0",
        "usedErrors": []
      }
    ],
    "src": "0:4558:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xbA7b98647a54173bd2Fc63fACC7921DF11C8F17a",
      "transactionHash": "0x3342b67f29506f58b265e98c73b34dfc4105786f083a1d77dca72b981e4e576e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-03T12:36:20.746Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}